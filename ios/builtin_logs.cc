#include "builtin_logs.h"

#include <algorithm>

namespace certificate_transparency {
namespace {

struct Item {
  const char* data;
  int len;
};

const Item kLogList[] = {
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\x87\x18\xcb\x63\xdc\xc1\x41\x99\x39"
     "\x56\x6c\xa3\x29\xdf\xc4\x8f\xa2\x9f\x04\xb3\x44\xd8\xe2\xa7\x77\xe2\xdd"
     "\xc9\x72\x2c\x6b\x59\x0f\x91\x7a\xb2\x56\x52\xd6\x11\xf4\x04\xed\xb6\x12"
     "\x64\xeb\x76\x51\x76\x2c\x71\x1b\x15\x14\xec\xaa\xc7\x01\x98\x53\x4c\xa3"
     "\x07",
     91},
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\x65\xfd\xc9\x98\x38\xaa\xc6\x93\x19"
     "\x3b\x74\x70\xde\x78\x2d\x99\xdd\xae\x4a\x51\x9d\x32\x92\xed\x34\x45\x63"
     "\x99\x72\xab\x5d\x21\x2d\x22\x5e\x0b\xee\x7d\xe0\x08\x7a\xbf\xfa\xea\x41"
     "\x00\xb8\x8c\x6a\x54\x0f\xd4\x4e\x3b\x12\x9c\x74\xa8\x51\x97\x10\xb0\x39"
     "\x95",
     91},
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\x52\x27\x57\xe0\x40\x7a\x19\xd8\x06"
     "\xa1\x00\xb4\xbb\x55\x4e\xa2\x46\x8b\x87\xb7\x1f\x37\xae\x82\x4d\x9f\xf3"
     "\x2d\xcf\x5b\xae\xda\x69\x13\xd2\xcd\x37\x24\x59\xf4\xc5\xe5\xf9\x84\xea"
     "\x43\xf6\x31\x36\x2f\xc2\x91\x77\xdb\x57\xdc\x4c\x0b\x8b\x55\x28\xdf\xff"
     "\x9e",
     91},
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\xc6\xae\x96\xa7\x66\x26\x2c\xd0\x21"
     "\x68\xce\x43\x92\x83\xeb\xd0\xae\x97\x6b\xb9\x97\xf5\xca\xb4\xae\x6f\x3b"
     "\x34\x65\xf6\xe8\x1b\x69\x50\xc8\xa6\x83\x0b\x96\x04\xb1\x66\xd0\x89\x83"
     "\xd9\xd8\x0e\xec\x97\x59\x24\x98\x3a\x4f\xda\x86\xf4\x4a\x8e\x5a\x0d\x68"
     "\xda",
     91},
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\x32\xbb\xca\x32\x91\x99\x83\x34\xbc"
     "\x19\x67\x26\x55\x99\x93\x09\x37\x37\xe7\x79\x59\x9a\x51\x76\x6d\x3e\x91"
     "\xc4\x23\x6f\xb5\xa5\x57\xd0\xf9\x39\xcc\xaa\x89\x69\x2f\x18\x52\xe5\x7e"
     "\xf5\x78\x55\x00\x9d\x44\x89\x78\x75\x2e\x81\xe7\xc8\x62\x53\x8b\x71\xac"
     "\x95",
     91},
    {"\x30\x59\x30\x13\x06\x07\x2a\x86\x48\xce\x3d\x02\x01\x06\x08\x2a\x86\x48"
     "\xce\x3d\x03\x01\x07\x03\x42\x00\x04\x4a\xc6\xde\x02\x44\x06\x02\xc0\x72"
     "\x3c\xaa\x4e\x2b\x84\x48\xee\x95\x77\xf4\xdf\xd9\xf4\x3b\x49\xe1\x50\x86"
     "\xd3\xa8\xb2\x2e\x05\xa2\xa4\xf0\xd4\x9e\x32\x90\x3e\x18\x85\xfe\x5e\xa3"
     "\xb9\x04\xb4\x93\x59\x45\x34\x21\x93\x26\xe1\xf4\x1a\x3a\x8c\xf3\x4e\x9f"
     "\x2d",
     91},
};

}  // namespace

std::vector<std::string> GetBuiltinLogs() {
  std::vector<std::string> result;
  result.reserve(std::size(kLogList));
  for (const auto& log : kLogList) {
    result.push_back(std::string(log.data, log.data + log.len));
  }
  return result;
}

}  // namespace certificate_transparency
